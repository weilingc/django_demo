"""
Django settings for demo project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/  

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

#database_部署至heroku設定
import dj_database_url
#i18n設定
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=)m_n2+^z-&85aa(v7yn79qzt+%j++5k_ba@d-zd+m2(xe*r1x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'cart',     #可自己寫此app或者上網抓套件"django-cart"
    'orders',
    'shop',
    'django.contrib.sites',     #要安裝allauth也需安裝這個 要記得設定SITE_ID=1
    # 'filer',
    'bootstrap3',

    # allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # allauth-providers
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.twitter',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.locale.LocaleMiddleware', #for i18n
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'demo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'shop.context_processors.category', #切換網頁頁面時,讓目錄可以顯示在header.html中.
                'cart.context_processors.cart',
            ],
        },
    },
]

# WSGI_APPLICATION = 'demo.wsgi.application' #在本基先不要開一下


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

#database_部署至heroku設定
db_from_env = dj_database_url.config()
DATABASES['default'].update(db_from_env)


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'zh-Hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGES = [
    ('en-US', 'English'),
    ('zh-hant', _('Traditional Chinese')),
]
LOCALE_PATHS = [os.path.join(BASE_DIR, "locale")]




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

#設定的static file的起始url.在template裡邊引用到.這個引數和MEDIA_URL的含義相同
STATIC_URL = '/static/'

#只有執行collectstatic時會用到 --- deploy前再使用---搜集所有靜態檔.
STATIC_ROOT = os.path.join(BASE_DIR, 'static_files')

#跟TEMPLATE_DIRS的作用類似 --- 例如專案的公共檔案
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# Session
SESSION_COOKIE_AGE = 43200 #12hrs


# Session-cart
CART_SESSION_ID = 'cart'


#Site
SITE_ID = 1

#Email設定
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'xxx@gmail.com'
EMAIL_HOST_PASSWORD = 'xxx'
EMAIL_POST = 587


#account
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = True
SOCIALACCOUNT_AUTO_SIGNUP = True
ACCOUNT_ACTIVATION_DAYS = 7

#登入設定
LOGIN_REDIRECT_URL = '/'

#本機設定
try:
    import settings_local
    # from demo.settings_local import *
    email = settings_local.EMAIL_HOST_USER
    print('import EMAIL_HOST_USER from settings_local:', email)
except:
    pass
